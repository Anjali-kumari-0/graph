 public:
    // Function to detect cycle in a directed graph.
    bool dfs(int node,vector<int> &vis, vector<int> &dfsvis, vector<int> adj[]){
        vis[node]=1;
        dfsvis[node]=1;
        
        for(auto it: adj[node]){
            if(!vis[it]){
                if(dfs(it, vis, dfsvis, adj)) return true;
                
            }else if(dfsvis[it]) return true;
        }
        
        dfsvis[node]=0;
        return false;
        
    }
    
   
    bool isCyclic(int n, vector<int> adj[]) {
        // code here
        vector<int> vis(n,0);
        vector<int> dfsvis(n,0);
        for(int i=0;i<n;i++){
            if(!vis[i]){
                if(dfs(i,vis,dfsvis,adj)) return true;
            }
        }
        return false;
        
    }
